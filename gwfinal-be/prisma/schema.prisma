generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  user_id       Int       @id @default(autoincrement())
  fullname      String?   @db.VarChar(255)
  email         String?   @db.VarChar(255)
  date_of_birth DateTime? @db.Date
  password      String?   @db.VarChar(255)
  comment       comment[]
  post          post[]
  saved         saved[]
  story         story[]
}

model comment {
  comment_id       Int    @id @default(autoincrement())
  user_id          Int
  post_id          Int
  message          String @db.VarChar(255)
  fullname_comment String @db.VarChar(255)
  user             user   @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "comment_ibfk_1")
  post             post   @relation(fields: [post_id], references: [post_id], onDelete: NoAction, onUpdate: NoAction, map: "comment_ibfk_2")

  @@index([post_id], map: "post_id")
  @@index([user_id], map: "user_id")
}

model post {
  post_id         Int       @id @default(autoincrement())
  user_id_create  Int
  created_at      DateTime? @db.Date
  caption         String    @db.VarChar(255)
  content         String?   @db.LongText
  fullname_create String?   @db.VarChar(255)
  comment         comment[]
  user            user      @relation(fields: [user_id_create], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_id")
  saved           saved[]

  @@index([user_id_create], map: "user_id_create")
}

model post_like {
  like_id   Int      @id @default(autoincrement())
  user_id   Int
  post_id   Int
  like_date DateTime @default(now()) @db.DateTime(0)
}

model story {
  story_id       Int      @id @default(autoincrement())
  user_id_story  Int
  fullname_story String?  @db.VarChar(255)
  content_story  String   @db.LongText
  created_story  DateTime @db.Date
  user           user     @relation(fields: [user_id_story], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_id_story")

  @@index([user_id_story], map: "fk_user_id_story")
}

model saved {
  saved_id   Int       @id @default(autoincrement())
  user_id    Int
  post_id    Int
  saved_date DateTime? @default(now()) @db.Timestamp(0)
  user       user      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "saved_ibfk_1")
  post       post      @relation(fields: [post_id], references: [post_id], onDelete: NoAction, onUpdate: NoAction, map: "saved_ibfk_2")

  @@unique([user_id, post_id], map: "unique_saved")
  @@index([post_id], map: "post_id")
}
